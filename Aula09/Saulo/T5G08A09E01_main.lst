; Coloque aqui seus imports
4000 0000 ; "LOADER<"		;	LOADER          <
4001 0000 ; "LOADER_UL<"		;	LOADER_UL       <
4002 0000 ; "DUMPER<"		;	DUMPER    < 
4003 0000 ; "DUMP_INI<"		;	DUMP_INI  <
4004 0000 ; "DUMP_TAM<"		;	DUMP_TAM  <
4005 0000 ; "DUMP_UL<"		;	DUMP_UL   <
4006 0000 ; "DUMP_BL<"		;	DUMP_BL   <
4007 0000 ; "DUMP_EXE<"		;	DUMP_EXE  <
4008 0000 ; "READ<"		;	READ <
4009 0000 ; "READfromACC<"		;	READfromACC <

;***** variaveis para CHTOI() *****
4010 0000 ; "CHTOI<"		;	CHTOI <
4011 0000 ; "chtoiA<"		;	chtoiA  <
4012 0000 ; "chtoiB<"		;	chtoiB  <

;***** variaveis para ITOCH() *****
4013 0000 ; "ITOCH<"		;	ITOCH <
4014 0000 ; "RES1<"		;	RES1 <
4015 0000 ; "RES2<"		;	RES2 < 
; CONSTANTS
;***** variaveis para MonitorBatch() *****
;****by Manjubs
4016 0000 ; "hbb<"		;	hbb <
4017 0000 ; "hDASH<"		;	hDASH <
4018 0000 ; "hJB<"		;	hJB  <
4019 0000 ; "hEND<"		;	hEND  <
4020 0000 ; "hDU<"		;	hDU  <
4021 0000 ; "hLO<"		;	hLO  <
4022 0000 ; "hEOL<"		;	hEOL <
4023 0000 ; "numPar<"		;	numPar <
4024 0000 ; "wordDU<"		;	wordDU <

4025 0000 ; "h0001<"		;	h0001 <
4026 0000 ; "h0002<"		;	h0002 <
4027 0000 ; "h0003<"		;	h0003 <
4028 0000 ; "h0004<"		;	h0004 <
4029 0000 ; "h0005<"		;	h0005 <
4030 0000 ; "hFFFF<"		;	hFFFF <

				;	& 	/0000
a000 0004		;	MAIN	JP 	INI		; salta para o in�cio do programa
8002 0000		;	UL		K 	/0000 	; par�metro: UL onde est� o arquivo de batch

a004 8002		;	INI		LD UL			   ;Carrega UL do batch a ser lido
d006 9001		;	      MM LOADER_UL ;Joga no parametro para dar READ
      ;INICIO
a008 8002		;	      LD UL
d00a a009		;	      SC READfromACC      ;Chama READ
d00c 5017		;	      -  hDASH     ;Verifica se � DASH
a00e 1012		;	      JZ moveOn1
a010 010e		;	      JP Erro1     ;TRATAR ERRO1 - inicio de job
      ; //
a012 8002		;	moveOn1   LD UL
d014 a009		;	          SC READfromACC
d016 5018		;	        - hJB
a018 101c		;	        JZ moveOn2
a01a 010e		;	        JP Erro1
        ; JB          ;TODO POSSIVELMENTE TENHA QUE ADICIONAR JJ
a01c 8002		;	moveOn2   LD UL
d01e a009		;	          SC READfromACC       ;PULAR EOL -- :TODO devemos tratar quando tem algum mais de um caracter?
        ; EOL

a020 8002		;	lerProx       LD UL
d022 a009		;	              SC READfromACC      ;Voltar a esse loop ao fim de um JOB
d024 5019		;	              -  hEND      ;Verifica se ja acabou
a026 110a		;	              JZ ApplyEND  ;Aplica fim
d028 4019		;	              +  hEND
              ;  /*
d02a 5022		;	              -  hEOL      ;Verifica se h� erro no fim de job
a02c 111a		;	              JZ Erro4
d02e 4022		;	              +  hEOL
              ;  CREL
d030 5017		;	              -  hDASH     ;Verifica se � DASH
a032 1036		;	              JZ contLerProx1
a034 0112		;	              JP Erro2     ;TRATAR ERRO1 - inicio de job
              ; //
a036 8002		;	contLerProx1  LD UL
d038 a009		;	              SC READfromACC
d03a 5021		;	              -  hLO
a03c 1048		;	              JZ ApplyLOAD ;Tratar LOAD
d03e 4021		;	              +  hLO
d040 5020		;	              -  hDU
a042 1080		;	              JZ ApplyDUMP ;Tratar DUMP
a044 0112		;	              JP Erro2     ;N�o existe essa funcao



a046 c046		;	FIM 	HM	FIM		; fim do programa

;**** JOBS ****
a048 8002		;	ApplyLOAD LD UL
d04a a009		;	          SC READfromACC       ;PULAR EOL -- :TODO devemos tratar quando tem algum mais de um caracter?
          ; EOL
d04c 8025		;	          LD h0001
d04e 9023		;	          MM numPar 
a050 8002		;	readParLO LD UL
d052 a009		;	          SC READfromACC
d054 5022		;	          -  hEOL       ;Se for EOL, vai para bloco de compara��o
a056 1076		;	          JZ verificaLO
d058 4022		;	          +  hEOL       
          ; Verificar parametros ;
d05a 9011		;	          MM chtoiA
a05c 8002		;	          LD UL
d05e a009		;	          SC READfromACC
d060 9012		;	          MM chtoiB
d062 a010		;	          SC CHTOI
d064 9024		;	          MM wordDU
a066 0068		;	          JP verParLO     ;verifica que parametro � esse

d068 8023		;	verParLO  LD numPar            
d06a 5025		;	          - h0001
a06c 106e		;	          JZ parLO1
          
d06e 8024		;	parLO1    LD wordDU
d070 9001		;	          MM LOADER_UL
a072 a0f6		;	          SC updatenumPar
a074 0050		;	          JP readParLO

d076 8023		;	verificaLO LD numPar
a078 107c		;	           JZ executaLO     ;EXECUTA apos receber os parametros
a07a 0116		;	           JP Erro3       ;FINALIZOU COM ERRO NO NUMERO DE PARAMETROS LIDOS

d07c a000		;	executaLO SC LOADER
a07e 0020		;	          JP lerProx

;*** DUMP ***
a080 8002		;	ApplyDUMP LD UL
d082 a009		;	          SC READfromACC       ;PULAR EOL -- :TODO devemos tratar quando tem algum mais de um caracter?
          ; EOL
d084 8029		;	          LD h0005
d086 9023		;	          MM numPar      ;Carrega numero de parametros, ira utilizar como contador
a088 8002		;	readParDU LD UL
d08a a009		;	          SC READfromACC
d08c 5022		;	          -  hEOL       ;Se for EOL, vai para bloco de compara��o
a08e 1100		;	          JZ verNumPar
d090 4022		;	          +  hEOL       
          ; Verificar parametros ;
d092 9011		;	          MM chtoiA
a094 8002		;	          LD UL
d096 a009		;	          SC READfromACC
d098 9012		;	          MM chtoiB
d09a a010		;	          SC CHTOI
d09c 9024		;	          MM wordDU
a09e 00a0		;	          JP verParDU     ;verifica que parametro � esse

d0a0 8023		;	verParDU  LD numPar
d0a2 5029		;	          -  h0005
a0a4 10be		;	          JZ parDU5
d0a6 4029		;	          + h0005
d0a8 5028		;	          - h0004
a0aa 10ca		;	          JZ parDU4
d0ac 4028		;	          + h0004
d0ae 5027		;	          - h0003
a0b0 10d6		;	          JZ parDU3
d0b2 4027		;	          + h0003
d0b4 5026		;	          - h0002
a0b6 10e2		;	          JZ parDU2
d0b8 4026		;	          + h0002
d0ba 5025		;	          - h0001
a0bc 10ee		;	          JZ parDU1

d0be 8024		;	parDU5  LD wordDU
d0c0 9006		;	        MM DUMP_BL   ;Tamanho do bloco
a0c2 8002		;	        LD UL
d0c4 a009		;	        SC READfromACC      ;Descarta bb
a0c6 a0f6		;	        SC updatenumPar
a0c8 0088		;	        JP readParDU
d0ca 8024		;	parDU4  LD wordDU 
d0cc 9003		;	        MM DUMP_INI  ;Endereco inicial
a0ce 8002		;	        LD UL
d0d0 a009		;	        SC READfromACC      ;Descarta bb
a0d2 a0f6		;	        SC updatenumPar
a0d4 0088		;	        JP readParDU
d0d6 8024		;	parDU3  LD wordDU
d0d8 9004		;	        MM DUMP_TAM  ;tamanho total da imagem
a0da 8002		;	        LD UL
d0dc a009		;	        SC READfromACC      ;Descarta bb
a0de a0f6		;	        SC updatenumPar
a0e0 0088		;	        JP readParDU
d0e2 8024		;	parDU2  LD wordDU
d0e4 9007		;	        MM DUMP_EXE  ;End da primeira instr executavel
a0e6 8002		;	        LD UL
d0e8 a009		;	        SC READfromACC      ;Descarta bb
a0ea a0f6		;	        SC updatenumPar
a0ec 0088		;	        JP readParDU
d0ee 8024		;	parDU1  LD wordDU
d0f0 9005		;	        MM DUMP_UL   ;end da LU
a0f2 a0f6		;	        SC updatenumPar
a0f4 0088		;	        JP readParDU

80f6 0000		;	updatenumPar $ /0001   0
				;	updatenumPar $ /0001
d0f8 8023		;	            LD numPar
d0fa 5025		;	            - h0001
d0fc 9023		;	            MM numPar
a0fe b0f6		;	            RS updatenumPar

d100 8023		;	verNumPar   LD numPar
a102 1106		;	            JZ executaDU     ;EXECUTA apos receber os parametros
a104 0116		;	            JP Erro3       ;FINALIZOU COM ERRO NO NUMERO DE PARAMETROS LIDOS

d106 a002		;	executaDU SC DUMPER
a108 0020		;	          JP lerProx

;*** END OF JOBS ***
d10a 8030		;	ApplyEND  LD hFFFF
a10c 0046		;	          JP FIM




;**** ERROS ****
d10e 8025		;	Erro1 LD h0001
a110 0020		;	      JP lerProx
d112 8026		;	Erro2 LD h0002
a114 0020		;	      JP lerProx
d116 8027		;	Erro3 LD h0003
a118 0020		;	      JP lerProx
d11a 8028		;	Erro4 LD h0004
a11c 0020		;	      JP lerProx



