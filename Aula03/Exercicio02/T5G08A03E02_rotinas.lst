;***** constantes *****
4000 0000 ; "h0000<"		;	h0000 <
4001 0000 ; "h0001<"		;	h0001 <
4002 0000 ; "h0002<"		;	h0002 <
4003 0000 ; "h0010<"		;	h0010 <
4004 0000 ; "h0030<"		;	h0030 <
4005 0000 ; "h0037<"		;	h0037 <
4006 0000 ; "h003A<"		;	h003A <
4007 0000 ; "h0047<"		;	h0047 <
4008 0000 ; "h1000<"		;	h1000 <
4009 0000 ; "h0100<"		;	h0100 <
4010 0000 ; "hFF00<"		;	hFF00 <
4011 0000 ; "hFFFF<"		;	hFFFF <
4012 0000 ; "AmLoad<"		;	AmLoad <
4013 0000 ; "AmDownload<"		;	AmDownload <

;***** variaveis para PACK() *****
2000 0000 ; "PACK>"		;	PACK    >
4014 0000 ; "packA<"		;	packA   <
4015 0000 ; "packB<"		;	packB   <  

;***** variaveis para UNPACK() *****
200a 0000 ; "UNPACK>"		;	UNPACK  >
4016 0000 ; "unpackA<"		;	unpackA <
4017 0000 ; "unpackB<"		;	unpackB <
4018 0000 ; "temp<"		;	temp <

;***** variaveis para CHTOI() TODO extrair *****
202e 0000 ; "CHTOI>"		;	CHTOI >
4019 0000 ; "chtoiA<"		;	chtoiA  <
4020 0000 ; "chtoiB<"		;	chtoiB  <
4021 0000 ; "varNumberOrLetter<"		;	varNumberOrLetter <
4022 0000 ; "chtoiWordA<"		;	chtoiWordA <
4023 0000 ; "chtoiWordB<"		;	chtoiWordB <
4024 0000 ; "chtoiWordC<"		;	chtoiWordC <
4025 0000 ; "chtoiWordD<"		;	chtoiWordD <

				;	& /0000
;**************************** PACK() ***************************************;
8000 0000		;	PACK      $ /0001   0
				;	PACK      $ /0001
d002 8014		;	          LD packA ;Carrega no acc <- packA
d004 6009		;	          *  h0100    ; multiplca por h0100
d006 4015		;	          +  packB
a008 b000		;	          RS PACK

;*************************** UNPACK() **************************************;
800a 0000		;	UNPACK    $  /0001   0
				;	UNPACK    $  /0001
d00c 9018		;	          MM temp   ;guarda no temp
d00e 6009		;	          *  h0100    ;shift de 2 bytes para esquerda
d010 7009		;	          /  h0100    ;shift de 2 bytes para direita
a012 2018		;	          JN casoNeg ;caso negativo jmp para casoNEG
d014 9017		;	          MM unpackB
a016 001c		;	          JP parteA ;continua para pegar a primeira parte da palavra
d018 5010		;	casoNeg   - hFF00
d01a 9017		;	          MM unpackB
d01c 8018		;	parteA    LD temp
d01e 5017		;	          - unpackB
d020 7009		;	          / h0100
a022 2028		;	          JN casoNeg2 ;caso negativo
d024 9016		;	          MM unpackA
a026 002c		;	          JP fimSubRotina
d028 5010		;	casoNeg2  - hFF00
d02a 9016		;	          MM unpackA
a02c b00a		;	fimSubRotina  RS UNPACK

;*************************** CHTOI() **************************************;

802e 0000		;	CHTOI $ /0001   0
				;	CHTOI $ /0001
d030 8019		;	          LD  chtoiA
a032 a00a		;	          SC UNPACK
d034 8016		;	          LD unpackA
a036 a068		;	          SC NumberOrLetter
a038 2066		;	          JN endChtoi
d03a 6008		;	          * h1000
d03c 9022		;	          MM chtoiWordA
          
;Proxima palavra
d03e 8017		;	          LD unpackB
a040 a068		;	          SC NumberOrLetter
a042 2066		;	          JN endChtoi
d044 6009		;	          * h0100
d046 9023		;	          MM chtoiWordB
;Proxima palavra
d048 8020		;	            LD chtoiB
a04a a00a		;	            SC UNPACK
d04c 8016		;	            LD unpackA
a04e a068		;	            SC NumberOrLetter
a050 2066		;	            JN endChtoi
d052 6003		;	            * h0010
d054 9024		;	            MM chtoiWordC
           
;Proxima palavra
d056 8017		;	            LD unpackB
a058 a068		;	            SC NumberOrLetter
a05a 2066		;	            JN endChtoi
d05c 9025		;	            MM chtoiWordD
;Agrupar os nibbles
d05e 8022		;	addAll      LD chtoiWordA
d060 4023		;	            + chtoiWordB
d062 4024		;	            + chtoiWordC
d064 4025		;	            + chtoiWordD
a066 b02e		;	endChtoi    RS CHTOI


8068 0000		;	NumberOrLetter $ /0001   0
				;	NumberOrLetter $ /0001
d06a 9021		;	          MM varNumberOrLetter
d06c 5007		;	          - h0047
a06e 2072		;	          JN continua1
a070 0084		;	          JP errorChtoi
d072 8021		;	continua1 LD varNumberOrLetter
d074 5006		;	          - h003A
a076 207e		;	          JN isNumber
d078 8021		;	          LD varNumberOrLetter
d07a 5005		;	          - h0037
a07c 0086		;	          JP EndNumberOrLetter
d07e 8021		;	isNumber  LD varNumberOrLetter
d080 5004		;	          - h0030
a082 0086		;	          JP EndNumberOrLetter
d084 8011		;	errorChtoi        LD hFFFF
a086 b068		;	EndNumberOrLetter RS NumberOrLetter


