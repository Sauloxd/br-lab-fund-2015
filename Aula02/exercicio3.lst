				;	@ /0000
0000 005a		;	main JP inicio
0002 0003		;	numeroDeBytes K /0003
0004 0008		;	origem  K /0008    ;ponteiro do origem
0006 0010		;	destino K /0010    ;ponteiro do destino
;Memoria reservada para os bytes
0008 0001		;	        K /0001
000a 0002		;	        K /0002
000c 0003		;	        K /0003
000e 0004		;	        K /0004
0010 ffff		;	        K /ffff
0012 ffff		;	        K /ffff
0014 ffff		;	        K /ffff
0016 ffff		;	        K /ffff
0018 0000		;	memDest $ /0010   0
001a 0000		;	memDest $ /0010   2
001c 0000		;	memDest $ /0010   4
001e 0000		;	memDest $ /0010   6
0020 0000		;	memDest $ /0010   8
0022 0000		;	memDest $ /0010   a
0024 0000		;	memDest $ /0010   c
0026 0000		;	memDest $ /0010   e
0028 0000		;	memDest $ /0010   10
002a 0000		;	memDest $ /0010   12
002c 0000		;	memDest $ /0010   14
002e 0000		;	memDest $ /0010   16
0030 0000		;	memDest $ /0010   18
0032 0000		;	memDest $ /0010   1a
0034 0000		;	memDest $ /0010   1c
0036 0000		;	memDest $ /0010   1e
				;	memDest $ /0010

;variaveis do programa
0038 0000		;	contador                $ /0001   0
				;	contador                $ /0001
003a 0000		;	conteudoImpar           $ /0001   0
				;	conteudoImpar           $ /0001
003c 0000		;	conteudoSendoMovido     $ /0001   0
				;	conteudoSendoMovido     $ /0001
003e 0000		;	EndSendoMovido          $ /0001   0
				;	EndSendoMovido          $ /0001
0040 0000		;	resultado               $ /0001   0
				;	resultado               $ /0001

;variaveis da funcao UNPACK
0042 0000		;	temp      $  /0001   0
				;	temp      $  /0001
0044 0000		;	sUnpackA  $  /0001    0
				;	sUnpackA  $  /0001 
0046 0000		;	sUnpackB  $  /0001   0
				;	sUnpackB  $  /0001

;instruções auto-modificação
0048 8000		;	AmLoad K /8000
004a 9000		;	AmDownload k /9000

;Constants
004c 0001		;	um        K  /0001
004e 0000		;	zero      K  /0000
0050 ffff		;	fs        K  /ffff
0052 0002		;	dois      K  /0002
0054 0100		;	cemH      K  /0100
0056 0010		;	dezH      K  /0010
0058 ff00		;	corr      K  /FF00

005a a05e		;	inicio    SC MEMCOPY
005c c05c		;	fim       HM fim

005e 0000		;	MEMCOPY   $ /0001   0
				;	MEMCOPY   $ /0001
0060 8002		;	          LD numeroDeBytes
0062 9038		;	loop      MM contador
0064 8038		;	          LD contador
0066 5052		;	          - dois
0068 9038		;	          MM contador
006a 8048		;	          LD AmLoad
006c 4004		;	          + origem
006e 9070		;	          MM proxInstr
0070 0000		;	proxInstr $ /0001   0
				;	proxInstr $ /0001
0072 903c		;	          MM conteudoSendoMovido
0074 8038		;	          LD contador
0076 2098		;	          JN unpackUmByte
0078 804a		;	          LD AmDownload
007a 4006		;	          + destino
007c 9080		;	          MM proxInstr2
007e 803c		;	          LD conteudoSendoMovido ;conteudo
0080 0000		;	proxInstr2 $ /0001   0
				;	proxInstr2 $ /0001
          ;Atualiza auto-modificação
0082 8004		;	          LD origem 
0084 4052		;	          + dois
0086 9004		;	          MM origem
0088 8006		;	          LD destino
008a 4052		;	          + dois
008c 9006		;	          MM destino
          ;verificar numero par de bytes
008e 8038		;	          LD contador
0090 4052		;	          + dois
0092 10ae		;	          JZ endMEMCOPY
0094 5052		;	          - dois
0096 0062		;	          JP loop

0098 803c		;	unpackUmByte  LD conteudoSendoMovido
009a a0b0		;	              SC UNPACK
009c 8044		;	              LD sUnpackA
009e 6054		;	              * cemH
00a0 903a		;	              MM conteudoImpar
00a2 804a		;	              LD AmDownload ;9000
00a4 4006		;	              + destino ;0010
00a6 90aa		;	              MM proxInstr3
00a8 803a		;	              LD conteudoImpar ;conteudo
00aa 0000		;	proxInstr3    $ /0001   0
				;	proxInstr3    $ /0001
00ac 00ae		;	              JP endMEMCOPY

00ae b05e		;	endMEMCOPY    RS MEMCOPY


00b0 0000		;	UNPACK    $  /0001   0
				;	UNPACK    $  /0001
00b2 9042		;	          MM temp   ;guarda no temp
00b4 6054		;	          *  cemH    ;shift de 2 bytes para esquerda
00b6 7054		;	          /  cemH    ;shift de 2 bytes para direita
00b8 20be		;	          JN casoNeg ;caso negativo jmp para casoNEG
00ba 9046		;	          MM sUnpackB
00bc 00c2		;	          JP parteA ;continua para pegar a primeira parte da palavra
00be 5058		;	casoNeg   - corr
00c0 9046		;	          MM sUnpackB
00c2 8042		;	parteA    LD temp
00c4 5046		;	          - sUnpackB
00c6 7054		;	          / cemH
00c8 20ce		;	          JN casoNeg2 ;caso negativo
00ca 9044		;	          MM sUnpackA
00cc 00d2		;	          JP fimSubRotina
00ce 5058		;	casoNeg2  - corr
00d0 9044		;	          MM sUnpackA
00d2 b0b0		;	fimSubRotina RS UNPACK


