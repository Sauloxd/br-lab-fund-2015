				;	@ /0000             ;Inicio do programa
0000 0044		;	main  JP  inicio    ;Jump para o inicio do programa
0002 0000		;	count  $  /0001  ;Resposta   0
				;	count  $  /0001  ;Resposta
0004 0000		;	string1   K  /0000
0006 6963		;	          K  'ic
0008 6f6d		;	          K  'om
000a 6665		;	          K  /6665
000c 0000		;	          K  /0000
000e 0000		;	          K  /0000
0010 0000		;	          K  /0000
0012 0000		;	          K  /0000
0014 7661		;	string2   K  'va
0016 6963		;	          K  'ic
0018 6f6d		;	          K  'om
001a 6600		;	          K  /6600
001c 0000		;	          K  /0000
001e 0000		;	          K  /0000
0020 0000		;	          K  /0000
0022 0000		;	          K  /0000 
0024 0000		;	A1        $  /0001   0
				;	A1        $  /0001
0026 0000		;	B1        $  /0001          0
				;	B1        $  /0001       
0028 0000		;	A10       $  /0001   0
				;	A10       $  /0001
002a 0000		;	B10       $  /0001   0
				;	B10       $  /0001
;variaveis da funcao UNPACK
002c 0000		;	temp      $  /0001   0
				;	temp      $  /0001
002e 0000		;	sUnpackA  $  /0001    0
				;	sUnpackA  $  /0001 
0030 0000		;	sUnpackB  $  /0001   0
				;	sUnpackB  $  /0001

;Contador do pograma principal   
0032 0000		;	count2    $  /0001    0
				;	count2    $  /0001 

;Constants
0034 0001		;	um        K  /0001
0036 0002		;	dois      K  /0002
0038 0100		;	cemH      K  /0100
003a 0010		;	dezH      K  /0010
003c ff00		;	corr      K  /FF00

;auto-modificação
003e 8000		;	AmLoad    K  /8000
0040 0004		;	AmEnd1    K  string1
0042 0014		;	AmEnd2    K  string2 

    
0044 8040		;	inicio    LD AmEnd1 ;Pega primeiro elemento
0046 403e		;	          +  AmLoad ;soma com instrução de colocar no acc
0048 904a		;	          MM next1
004a 0000		;	next1     $  /0001   0
				;	next1     $  /0001
004c a090		;	          SC UNPACK   ;chama surotina unpack()
004e 802e		;	          LD sUnpackA
0050 9024		;	          MM A1
0052 8030		;	          LD sUnpackB
0054 9026		;	          MM B1

0056 8042		;	          LD AmEnd2 ;Carreg primeira palavra da string2 no acc
0058 403e		;	          +  AmLoad ;soma com instrução de colocar no acc
005a 905c		;	          MM next2
005c 0000		;	next2     $  /0001   0
				;	next2     $  /0001
005e a090		;	          SC UNPACK   ;chama surotina unpack()
0060 802e		;	          LD sUnpackA
0062 9028		;	          MM A10
0064 8030		;	          LD sUnpackB
0066 902a		;	          MM B10
          
          ;compara A1 com A10
0068 8028		;	          LD A10
006a 108e		;	          JZ fim
006c 8024		;	          LD A1
006e 108e		;	          JZ fim
0070 5028		;	          - A10
0072 a0b4		;	          SC IfZAddCount
          ;;Verifica B1 e B10
0074 802a		;	          LD B10
0076 108e		;	          JZ fim
0078 8026		;	          LD B1
007a 108e		;	          JZ fim
007c 502a		;	          - B10
007e a0b4		;	          SC IfZAddCount

          ;Auto modificação
0080 8040		;	          LD AmEnd1
0082 4036		;	          +  dois
0084 9040		;	          MM AmEnd1

0086 8042		;	          LD AmEnd2
0088 4036		;	          +  dois
008a 9042		;	          MM AmEnd2

008c 0044		;	          JP inicio

008e c08e		;	fim       HM fim

0090 0000		;	UNPACK    $  /0001   0
				;	UNPACK    $  /0001
0092 902c		;	          MM temp   ;guarda no temp
0094 6038		;	          *  cemH    ;shift de 2 bytes para esquerda
0096 7038		;	          /  cemH    ;shift de 2 bytes para direita
0098 209e		;	          JN casoNeg ;caso negativo jmp para casoNEG
009a 9030		;	          MM sUnpackB
009c 00a2		;	          JP parteA ;continua para pegar a primeira parte da palavra
009e 503c		;	casoNeg   - corr
00a0 9030		;	          MM sUnpackB
00a2 802c		;	parteA    LD temp
00a4 5030		;	          - sUnpackB
00a6 7038		;	          / cemH
00a8 20ae		;	          JN casoNeg2 ;caso negativo
00aa 902e		;	          MM sUnpackA
00ac 00b2		;	          JP fimSubRotina
00ae 503c		;	casoNeg2  - corr
00b0 902e		;	          MM sUnpackA
00b2 b090		;	fimSubRotina RS UNPACK

00b4 0000		;	IfZAddCount       $ /0001   0
				;	IfZAddCount       $ /0001
00b6 10bc		;	               JZ contAddCount ;Se nao for igual a zero, vai pra fimAddCount
00b8 008e		;	               JP fim
00ba b0b4		;	fimAddCount    RS IfZAddCount
00bc 8002		;	contAddCount   LD count
00be 4034		;	               + um
00c0 9002		;	               MM count
00c2 00ba		;	               JP fimAddCount

